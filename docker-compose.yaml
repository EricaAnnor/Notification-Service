
services:
  web:
    build: .
    container_name: notification-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./notification:/notification
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: notification-database
    restart: always
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  rabbitmq:
    image: rabbitmq:3-management
    container_name: notification-message-queue
    ports:
      - "5672:5672"     
      - "15672:15672" 
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQDEFAULTUSER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQDEFAULTPASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq


  redis:
    image: redis:7
    ports:
      - "6379:6379"

  celery_worker:
    build: .
    command: celery -A notification.worker worker --loglevel=info -Q email,sms
    env_file:
      - .env
    volumes:
      - .:/notification
    depends_on:
      rabbitmq:
        condition: service_healthy


volumes:
  postgres_data:
  rabbitmq_data: